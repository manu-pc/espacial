/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

/**
 *
 * @author alumnogreibd
 */
import aplicacion.Nave;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.ListSelectionModel;


public class VNave extends javax.swing.JDialog implements ListSelectionListener {


    private VPrincipal padre;
    private aplicacion.FachadaAplicacion fa;
    /**
     * Creates new form VCategoria
     */
public VNave(java.awt.Frame padre, boolean modal, aplicacion.FachadaAplicacion fa) {
    super(padre, modal);
    this.fa = fa;
    initComponents();
    tablaNaves.getSelectionModel().addListSelectionListener(this);
    
    tablaNaves.setModel(new ModeloTablaNave());
    ModeloTablaNave mt ;
    mt = (ModeloTablaNave) tablaNaves.getModel();
    mt.setFilas(fa.obtenerNaves());
    
    checkbox_id.setSelected(true);
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonSalir = new javax.swing.JButton();
        CampoIDNave = new javax.swing.JTextField();
        CampoNombre = new javax.swing.JTextField();
        CampoTipo = new javax.swing.JTextField();
        CampoTamanho = new javax.swing.JTextField();
        CampoMasa = new javax.swing.JTextField();
        EtiquetaID = new javax.swing.JLabel();
        EtiquetaNombre = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaNaves = new javax.swing.JTable();
        buscarBoton = new javax.swing.JButton();
        Actualizar = new javax.swing.JButton();
        borrarBoton = new javax.swing.JButton();
        añadirBoton = new javax.swing.JButton();
        checkbox_id = new javax.swing.JCheckBox();
        checkbox_nombre = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de categorías");

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        CampoIDNave.setPreferredSize(new java.awt.Dimension(70, 30));
        CampoIDNave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CampoIDNaveActionPerformed(evt);
            }
        });

        CampoNombre.setPreferredSize(new java.awt.Dimension(70, 30));

        CampoTipo.setPreferredSize(new java.awt.Dimension(70, 30));

        CampoTamanho.setPreferredSize(new java.awt.Dimension(70, 30));

        CampoMasa.setPreferredSize(new java.awt.Dimension(70, 30));

        EtiquetaID.setText("ID");

        EtiquetaNombre.setText("Nombre");

        jLabel1.setText("Tipo");

        jLabel2.setText("Tamaño");

        jLabel3.setText("Masa");

        tablaNaves.setModel(new ModeloTablaNave());
        jScrollPane1.setViewportView(tablaNaves);

        buscarBoton.setText("Buscar");
        buscarBoton.setActionCommand("");
        buscarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarBotonActionPerformed(evt);
            }
        });

        Actualizar.setText("Actualizar");
        Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ActualizarActionPerformed(evt);
            }
        });

        borrarBoton.setText("Borrar");
        borrarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarBotonActionPerformed(evt);
            }
        });

        añadirBoton.setText("Añadir");
        añadirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                añadirBotonActionPerformed(evt);
            }
        });

        checkbox_id.setText("ID");
        checkbox_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_idActionPerformed(evt);
            }
        });

        checkbox_nombre.setText("Nombre");
        checkbox_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkbox_nombreActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(33, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(añadirBoton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(borrarBoton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Actualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonSalir))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(EtiquetaID)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(EtiquetaNombre, javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel1)))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(CampoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(CampoIDNave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(CampoTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(CampoMasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(CampoTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(108, 108, 108)
                                .addComponent(buscarBoton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkbox_id)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(checkbox_nombre)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EtiquetaID)
                            .addComponent(CampoIDNave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CampoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EtiquetaNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(CampoTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buscarBoton)
                            .addComponent(checkbox_id)
                            .addComponent(checkbox_nombre))
                        .addGap(86, 86, 86)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoTamanho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CampoMasa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(añadirBoton)
                    .addComponent(borrarBoton)
                    .addComponent(Actualizar)
                    .addComponent(botonSalir))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_botonSalirActionPerformed

    private void buscarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarBotonActionPerformed
        
        String nave = CampoIDNave.getText();
        Integer id = 0; // Valor por defecto
        if(!nave.isEmpty()) id = Integer.parseInt(nave);
        String nombre = CampoNombre.getText();
        //String tamaño = CampoTamanho.getText();
        //Float tam = Float.parseFloat(tamaño);
        //String masa = CampoMasa.getText();
        //Float mas = Float.parseFloat(tamaño);
        //Nave naveEspacial = new Nave(id,CampoNombre.getText(),CampoTipo.getText(),tam,mas);
        
         ModeloTablaNave mt;
         mt = (ModeloTablaNave) tablaNaves.getModel();
         
         if(checkbox_id.isSelected()) {
            mt.setFilas(fa.buscarNavePorId(id));
         }
         else if(checkbox_nombre.isSelected()) {
            mt.setFilas(fa.buscarNavePorNombre(nombre));
         }
        
        //public Nave(Integer idNave, String nombre, String tipo, Float tamanho, Float masa) {

    }//GEN-LAST:event_buscarBotonActionPerformed

    private void borrarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarBotonActionPerformed
         int selectedRow = tablaNaves.getSelectedRow();
        if (selectedRow != -1) {
            ModeloTablaNave modelo = (ModeloTablaNave) tablaNaves.getModel();
            aplicacion.Nave nave = modelo.obtenerNave(selectedRow);

            fa.borrarNave(nave);
            
            // Refrescamos la tabla
            modelo.setFilas(fa.obtenerNaves());
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Selecciona una nave para borrar.");
        }
    }//GEN-LAST:event_borrarBotonActionPerformed

    private void añadirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_añadirBotonActionPerformed
        
   
        String nave = CampoIDNave.getText();
        Integer id = Integer.parseInt(nave);
        String tamaño = CampoTamanho.getText();
        Float tam = Float.parseFloat(tamaño);
        String masa = CampoMasa.getText();
        Float mas = Float.parseFloat(tamaño);
        Nave naveEspacial = new Nave(id,CampoNombre.getText(),CampoTipo.getText(),tam,mas);
        fa.añadirNave(naveEspacial);
        //public Nave(Integer idNave, String nombre, String tipo, Float tamanho, Float masa) {
        
        // Refrescamos la tabla
        ModeloTablaNave modelo = (ModeloTablaNave) tablaNaves.getModel();
        modelo.setFilas(fa.obtenerNaves());

        
    }//GEN-LAST:event_añadirBotonActionPerformed

    private void ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ActualizarActionPerformed
        if (CampoIDNave.getText().isEmpty() || CampoNombre.getText().isEmpty() ||
        CampoTipo.getText().isEmpty() || CampoTamanho.getText().isEmpty() ||
        CampoMasa.getText().isEmpty()) {
        
        javax.swing.JOptionPane.showMessageDialog(this, "Todos los campos deben estar rellenados.");
        return;
    }

        
        Integer id = Integer.parseInt(CampoIDNave.getText());
        Float tam = Float.parseFloat(CampoTamanho.getText());
        Float mas = Float.parseFloat(CampoMasa.getText());

        Nave naveActualizada = new Nave(id, CampoNombre.getText(), CampoTipo.getText(), tam, mas);
        fa.actualizarNave(naveActualizada);
   
        // Refrescamos la tabla
        ModeloTablaNave modelo = (ModeloTablaNave) tablaNaves.getModel();
        modelo.setFilas(fa.obtenerNaves());

    }//GEN-LAST:event_ActualizarActionPerformed

    private void CampoIDNaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CampoIDNaveActionPerformed
    
        
    }//GEN-LAST:event_CampoIDNaveActionPerformed

    private void checkbox_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_idActionPerformed
        
        // Si los dos están deseleccionados
        if(!checkbox_id.isSelected() && !checkbox_nombre.isSelected()) {
            buscarBoton.setEnabled(false);
        }
        else {
            buscarBoton.setEnabled(true);
        }
        
        checkbox_nombre.setSelected(false);
    }//GEN-LAST:event_checkbox_idActionPerformed

    private void checkbox_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkbox_nombreActionPerformed
        
        // Si los dos están deseleccionados
        if(!checkbox_id.isSelected() && !checkbox_nombre.isSelected()) {
            buscarBoton.setEnabled(false);
        }
        else {
            buscarBoton.setEnabled(true);
        }
        
        checkbox_id.setSelected(false);
    }//GEN-LAST:event_checkbox_nombreActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Actualizar;
    private javax.swing.JTextField CampoIDNave;
    private javax.swing.JTextField CampoMasa;
    private javax.swing.JTextField CampoNombre;
    private javax.swing.JTextField CampoTamanho;
    private javax.swing.JTextField CampoTipo;
    private javax.swing.JLabel EtiquetaID;
    private javax.swing.JLabel EtiquetaNombre;
    private javax.swing.JButton añadirBoton;
    private javax.swing.JButton borrarBoton;
    private javax.swing.JButton botonSalir;
    private javax.swing.JButton buscarBoton;
    private javax.swing.JCheckBox checkbox_id;
    private javax.swing.JCheckBox checkbox_nombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaNaves;
    // End of variables declaration//GEN-END:variables

public void valueChanged(ListSelectionEvent e) {
    if (!e.getValueIsAdjusting()) {
        int selectedRow = tablaNaves.getSelectedRow();
        if (selectedRow != -1) {
            ModeloTablaNave modelo = (ModeloTablaNave) tablaNaves.getModel();
            aplicacion.Nave naveSeleccionada = modelo.obtenerNave(selectedRow);

            CampoIDNave.setText(String.valueOf(naveSeleccionada.getIDNave()));
            CampoNombre.setText(naveSeleccionada.getNombre());
            CampoTipo.setText(naveSeleccionada.getTipo());
            CampoTamanho.setText(String.valueOf(naveSeleccionada.getTamanho()));
            CampoMasa.setText(String.valueOf(naveSeleccionada.getMasa()));
        }
    }
}
    

}
